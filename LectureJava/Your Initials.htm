<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html><head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<title>Your Initials</title>
	<link rel="stylesheet" type="text/css" href="Your%20Initials_files/newstyle.css"> 
	<link rel="stylesheet" type="text/css" href="Your%20Initials_files/assignment.css"> 
<script type="text/javascript">window.sendToApp = function(data, ctid) {var doc = window.document;var event = doc.createEvent('MessageEvent');event.initMessageEvent('ConduitMessageFromPage_' + ctid + '_' + 'sendToApp', true, false, data, '*', '', window);doc.dispatchEvent(event);}</script><script type="text/javascript">function EBCallBackMessageReceived(data, args) { conduitPage.sendRequest(data.ctid, data.appId, data.topic, args);} if (!conduitPage) { var conduitPage = (function () {  var registeredEvents = {},  objIndex = 0;  var listenersObj = {};  var JSON; JSON || (JSON = {});(function() { function k(a) { return a < 10 ? "0" + a : a } function o(a) { p.lastIndex = 0; return p.test(a) ? '"' + a.replace(p, function(a) { var c = r[a]; return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) }) + '"' : '"' + a + '"' } function l(a, j) { var c, d, h, m, g = e, f, b = j[a]; b && typeof b === "object" && typeof b.toJSON === "function" && (b = b.toJSON(a)); typeof i === "function" && (b = i.call(j, a, b)); switch (typeof b) {  case "string": return o(b); case "number": return isFinite(b) ? String(b) : "null"; case "boolean": case "null": return String(b); case "object": if (!b) return "null";  e += n; f = []; if (Object.prototype.toString.apply(b) === "[object Array]") { m = b.length; for (c = 0; c < m; c += 1) f[c] = l(c, b) || "null"; h = f.length === 0 ? "[]" : e ? "[\n" + e + f.join(",\n" + e) + "\n" + g + "]" : "[" + f.join(",") + "]"; e = g; return h } if (i && typeof i === "object") { m = i.length; for (c = 0; c < m; c += 1) typeof i[c] === "string" && (d = i[c], (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h)) } else for (d in b) Object.prototype.hasOwnProperty.call(b, d) && (h = l(d, b)) && f.push(o(d) + (e ? ": " : ":") + h); h = f.length === 0 ? "{}" : e ? "{\n" + e + f.join(",\n" + e) + "\n" + g + "}" : "{" + f.join(",") +"}"; e = g; return h } } if (typeof Date.prototype.toJSON !== "function") Date.prototype.toJSON = function() { return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + k(this.getUTCMonth() + 1) + "-" + k(this.getUTCDate()) + "T" + k(this.getUTCHours()) + ":" + k(this.getUTCMinutes()) + ":" + k(this.getUTCSeconds()) + "Z" : null }, String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function() { return this.valueOf() }; var q = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,p = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, e, n, r = { "\u0008": "\\b", "\t": "\\t", "\n": "\\n", "\u000c": "\\f", "\r": "\\r", '"': '\\"', "\\": "\\\\" }, i; if (typeof JSON.stringify !== "function") JSON.stringify = function(a, j, c) { var d; n = e = ""; if (typeof c === "number") for (d = 0; d < c; d += 1) n += " "; else typeof c === "string" && (n = c); if ((i = j) && typeof j !== "function" && (typeof j !== "object" || typeof j.length !== "number")) throw Error("JSON.stringify"); return l("",{ "": a })}; if (typeof JSON.parse !== "function") JSON.parse = function(a, e) { function c(a, d) { var g, f, b = a[d]; if (b && typeof b === "object") for (g in b) Object.prototype.hasOwnProperty.call(b, g) && (f = c(b, g), f !== void 0 ? b[g] = f : delete b[g]); return e.call(a, d, b) } var d, a = String(a); q.lastIndex = 0; q.test(a) && (a = a.replace(q, function(a) { return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4) })); if (/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return d = eval("(" + a + ")"), typeof e === "function" ? c({ "": d }, "") : d; throw new SyntaxError("JSON.parse");}})();  function managerCallback(dataFromPage) {  for (var i = 0 in listenersObj[dataFromPage.topic]) {   listenersObj[dataFromPage.topic][i](dataFromPage.data);   delete listenersObj[dataFromPage.topic][i];  }  }  function addCallback(topic, callback) {  if (!listenersObj[topic]) {   listenersObj[topic] = [];  }  listenersObj[topic].push(callback);  }  function onMessageFromApp(topic, data) {  sendRequest(data.ctid, null, topic, data.userData, function () { }, true, data.cbId);  }  this.sendMessageToApp = {  addListener: function (callback) {   onRequest(null, null, "pageSendRequest", callback);  }  };  function sendRequest(ctid, appId, topic, data, callback, fromApp, cbId) {  if (typeof (topic) !== "string" ) {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (typeof (data) !== "string") {   return { errorMessage: "Invalid data, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  if (!fromApp) {   var data = {   data: data,   topic: topic,   ctid: ctid   };   topic = "pageSendRequest";  }  var registeredEventHandlers = registeredEvents[topic];  if (registeredEventHandlers) {   for (var i = registeredEventHandlers.length - 1; i >= 0; i--) {   try {    if (callback && !fromApp) {    addCallback(data.topic, callback);    }    registeredEventHandlers[i].handler.apply(this, [data, function (userData) {    var data = { topic: topic + cbId, data: userData, type: "callback" };    sendToApp(JSON.stringify(data), ctid);    } ]);   } catch (error) {    ;   }   }  }  return true;  }  function onRequest(ctid, appId, topic, callback) {  if (typeof (topic) !== "string") {   return { errorMessage: "Invalid topic, expected a string.", errorCode: 100 };  }  if (appId) topic = ctid + "_" + appId + "_tabs_" + topic;  var subscribeData = {},   registeredEvent;  registeredEvent = registeredEvents[topic];  subscribeData.handler = callback;  if (!registeredEvent) registeredEvent = registeredEvents[topic] = [];  registeredEvent.push(subscribeData);  return true;  }  sendMessageToApp.addListener(function (data) {  sendToApp(JSON.stringify(data), data.ctid);  });  return {  onMessageFromApp: onMessageFromApp,  sendRequest: sendRequest,  onRequest: { addListener: onRequest },  managerCallback: managerCallback,  JSON: JSON  }; })(); }</script><script type="text/javascript">(function(){function selectionProcessor() {

        function trimString(str) {
            if (typeof (str) != "string")
                return "";

            return str.replace(/^\s+|\s+$/g, "");
        }

        function cutToMaxLatter(data) {
            if (typeof (data) != "string")
                return "";

            if (data.length > 200) { //same behavior as old toolbar
                data = data.substr(0, 200);
                var index = data.lastIndexOf(" ");
                if (index > 1)
                    data = data.substr(0, index);
            }

            return data;
        }

        function bindSelection() {

            if (document.body && document.body.addEventListener) {
                document.body.addEventListener("mouseup", handletext, false);
            }
            else if (document.body && document.body.attachEvent) {
                document.body.attachEvent("onmouseup", handletext);
            }
        }

        function handletext() {
            var dataObj = {}; //can represent TextRange or SelectionObject objects depending browser

            if (window.getSelection && document.activeElement) {
                if (document.activeElement.nodeName == "INPUT" && document.activeElement.getAttribute("type").toLowerCase() == "text") {
                    var ta = document.activeElement;
                    dataObj = ta.value.substring(ta.selectionStart, ta.selectionEnd);
                } else {
                    dataObj = window.getSelection();
                }
            } else if (document.getSelection) {
                dataObj = document.getSelection();
            } else if (document.selection) {
                dataObj = document.selection.createRange().text;

            } else
                return;

            if (!dataObj) //is dataObj is null or undefined or string empty etc.
                return;

            var txt = dataObj.toString();

            txt = trimString(txt) || '';
            txt = cutToMaxLatter(txt) || '';

            if (txt) {  //if not an empty string
                conduitPage.sendRequest('CT3240727', '10000002','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ 'name': "selection", 'text': txt }), function () { });
            }
        }

        conduitPage.sendRequest('CT3240727', '10000002','search/plugin[onpage_selection]:onPageMessage', conduitPage.JSON.stringify({ name: 'handshake' }), function () { });

        return {
            "bindSelection": bindSelection
        }
    } selectionProcessor().bindSelection(); })();</script><script type="text/javascript">if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script type="text/javascript">if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script><script type="text/javascript">if (window.addEventListener) { 
  var callback_func = function(evt) { 
    if ('undefined' != typeof evt.target && "A" == evt.target.nodeName) { 
      var url = evt.target.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = window.addEventListener('click', callback_func, true); 
  var cb_add_listener_result_contextmenu = window.addEventListener('contextmenu', callback_func, true); 
} else if (document.attachEvent) {
  var callback_func = function () { 
    if ('undefined' != typeof event.srcElement &&'A' == event.srcElement.tagName) { 
      var url = event.srcElement.href; 
      EBCallBackMessageReceived({ ctid : 'CT3240727', appId : '129887092956006584', topic : 'callBackToAppThroughAppToTabCommunication_0.03401131784347966'},url); 
    } 
    return true; 
  }; 
  var cb_add_listener_result_click = document.attachEvent('onclick', callback_func); 
  var cb_add_listener_result_contextmenu = document.attachEvent('oncontextmenu', callback_func); 
} 
 

</script></head>
<body>

<ul id="summary">

</ul>

<h3>Your Initials</h3>

<p>Display your initials on the screen in block letters as shown.</p>

<pre class="DOSBOX">For the name Jorge Balderama Perez...

JJJJJ  BBBB   PPPP
  J    B   B  P   P
  J    B   B  P   P
  J    BBBB   PPPP
J J    B   B  P 
J J    B   B  P 
 JJ    BBBB   P
</pre>

<p>In case you have no idea how to make a certain letter, there are some suggestions below.</p>

<p><img src="Your%20Initials_files/BigLetters2.png" width="640" height="339"></p>


<pre>

</pre>

<hr>





</body></html>